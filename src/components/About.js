import React from 'react';
import {Link} from "react-router-dom";
import Title from './Title';
import './Common.css';
import './About.css';

export default function About() {
    return (
        <div>
            <Title />
            <div className="about-container">
                <h1>What is this?</h1>
                <p>
                    Pixel Mist is a tool that gives you a new way to visualize mathematical expressions. It's kind of like 
                    a pixel shader but a lot simpler and more approachable. You can use it to create custom gradients, 
                    generate interesting patterns, and get a better understanding of mathematics.
                </p>
                <h1>How does it work?</h1>
                <p>
                    I'm gonna assume you know about the <a href="https://en.wikipedia.org/wiki/RGB_color_model">RGB color model</a>.
                    <br/><br/>
                    You are given five form fields to fill out:
                    <ul>
                        <li>Width</li>
                        <li>Height</li>
                        <li>Red Expression</li>
                        <li>Green Expression</li>
                        <li>Blue Expression</li>
                    </ul>
                    Width & height are used to specify dimensions of the generated image in number of pixels.
                    <br/><br/>
                    The RGB expressions are used to dictate what the color of each individual pixel should be at each XY coordinate in the image.
                    <br/><br/>
                    You're really specifying R(x, y), G(x, y), B(x, y). Those values are calculated for the entire dimensions of the image. 
                    <br/><br/>
                    The min & max values generated by your expression are mapped to 0 and 255 respectively with every other value in between being 
                    linearly interpolated. The outputs for the individual R, G, & B channels are then coalesced to create the resulting image.
                    <br/><br/>
                    The expressions you write can do anything you can do in vanilla Javascript. That means you have full access to the <a href="https://www.w3schools.com/js/js_math.asp">Math</a> object.
                    Also, in addition to being able to use the dynamic variables x & y which represent a pixel's coordinate position, you can 
                    also reference static variables w & h which represent the width & height of the output image.
                    <br/><br/>
                    P.S. All the computation is happening in the browser on <i>your computer</i>. There's no backend for this website at all because I'm not paying for that ðŸ˜›
                </p>
                <h1>Who made it?</h1>
                <p><a href="https://github.com/sourabhdesai/">I did</a></p>
                <h1>Why does this exist?</h1>
                <p>
                    It was the summer after freshman year of my Computer Science undergrad and the
                    world of programming was consuming me. I was playing around with a homework assignment I had gotten during
                    the school year that involved editing images pixel-by-pixel. I decided to see what would happen if I
                    generated an entire image from code by specifying mathematical equations for each RGB color channel.
                    <br/><br/>
                    I quickly realized that I could make images with fascinating patterns using this method. For example, I 
                    found that using the expression Math.tanh(x & y) would result in a <a href="https://en.wikipedia.org/wiki/Sierpi%C5%84ski_triangle">SierpiÅ„ski triangle</a> 
                    pattern (<Link to="/?r=Math.tanh%28x+%26+y%29&g=Math.tanh%28x+%26+y%29&b=Math.tanh%28x+%26+y%29&h=500&w=500">try for yourself</Link>). 
                    I could utilize my mathematical knowledge to adjust images to match my aesthetic preferences.
                    <br/><br/>
                    Besides being a way to keep my coding skills sharp over the summer, I found myself spending hours 
                    just creating new interesting patterns with this tool. I'm pretty certain I'm not the only one that would 
                    find this interesting to play with.
                    <br/><br/>
                    Fast forward 8 years and the world is undergoing a global pandemic which leaves me with a lot of free time 
                    being at home in quarantine. Enough free time to dust off the old side project from all those years ago and 
                    turn it into a website so everyone can be as captivated by it as I was.
                </p>
            </div>
        </div>
    );
}
