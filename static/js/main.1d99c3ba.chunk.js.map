{"version":3,"sources":["utils/PixelGenerator.js","utils/ScreenUtils.js","components/Title.js","components/PixelCanvas.js","components/ExpressionBasedPixelGen.js","components/About.js","components/Examples.js","App.js","serviceWorker.js","index.js"],"names":["clamp","n","min","max","Math","linearInterpolate","minFrom","maxFrom","minTo","maxTo","PixelGeneratorResult","pixelGrid","this","map","row","pixel","round","PixelGenerator","widthPixels","heightPixels","scale","Infinity","_","times","x","yInverse","y","xInterp","yInterp","pixelVal","generate","isNaN","w","h","Error","ExpressionPixelGenerator","expressionString","expressionFunc","eval","xInput","yInput","width","height","adjustDimension","dimensionLength","screenAdjustmentRatio","window","screen","Title","className","to","toHexValue","r","g","b","PixelCanvas","red","green","blue","rGenerator","gGenerator","bGenerator","console","log","imageBase64Str","bmp","BitMap","create","rPixels","generatePixels","convertResultToRgbScale","gPixels","bPixels","setPixel","toBase64","updateCanvas","src","DEFAULT_SIDE_LENGTH","DEFAULT_QUERY_PARAMS","ExpressionBasedPixelGen","history","useHistory","location","useLocation","useForm","register","handleSubmit","givenSearchParams","URLSearchParams","search","givenSearchParamsObj","Object","fromEntries","entries","queryParamsAfterDefaults","mapValues","value","key","get","isEqual","push","pathname","toString","Number","onSubmit","formData","newQueryParams","pick","keys","type","name","placeholder","defaultValue","ref","required","About","href","ImageExample","filename","queryParams","alt","id","Examples","imageExamples","App","exact","path","data-color-scheme","data-icon","aria-label","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1d99c3ba.chunk.js","sourcesContent":["import _ from \"lodash\";\n\nexport function clamp(n, min, max) {\n    return Math.min(Math.max(n, min), max);\n}\n\n/**\n * Interpolate a given number n to be between -1 and 1\n * Partially take from here: https://stats.stackexchange.com/a/70807\n * @param {Number} n - number to normalize\n * @param {Number} minFrom - Minimum possible value of n\n * @param {Number} maxFrom - Maximum possible value of n\n * @param {Number} minTo - Minimum desired output\n * @param {Number} maxTo - Maximum desired output\n */\nexport function linearInterpolate(n, minFrom, maxFrom, minTo, maxTo) {\n    const unitNorm = (n - minFrom) / (maxFrom - minFrom);\n    return clamp(minTo + (unitNorm * (maxTo - minTo)), minTo, maxTo);\n}\n\nexport class PixelGeneratorResult {\n    constructor(pixelGrid, min, max) {\n        this.pixelGrid = pixelGrid;\n        this.min = min;\n        this.max = max;\n    }\n\n    convertResultToRgbScale() {\n        return this.pixelGrid.map(row => {\n            return row.map(pixel => {\n                return clamp(Math.round(linearInterpolate(pixel, this.min, this.max, 0, 255)), 0, 255);\n            });\n        });\n    }\n}\n\n// Abstract class - do not instantiate. Implementors must override generate(x, y) method\nexport class PixelGenerator {\n\n    generatePixels(widthPixels, heightPixels, scale) {\n        scale = scale || 1;\n        var min = Infinity;\n        var max = -Infinity;\n\n        const pixelGrid = _.times(widthPixels, x => {\n            return _.times(heightPixels, yInverse => {\n                const y = heightPixels - 1 - yInverse;\n                const xInterp = linearInterpolate(x, 0, widthPixels, -scale, scale);\n                const yInterp = linearInterpolate(y, 0, heightPixels, -scale, scale);\n                let pixelVal = this.generate(xInterp, yInterp, widthPixels, heightPixels);\n                pixelVal = _.isNaN(pixelVal) ? 0 : pixelVal;\n                min = Math.min(pixelVal, min);\n                max = Math.max(pixelVal, max);\n                return pixelVal;\n            });\n        });\n\n        return new PixelGeneratorResult(pixelGrid, min, max);\n    }\n\n    generate(x, y, w, h) {\n        throw new Error(\"Must Implement\");\n    }\n}\n\nexport class ExpressionPixelGenerator extends PixelGenerator {\n    constructor(expressionString) {\n        super();\n        this.expressionFunc = eval(`((x, y, w, h) => ${expressionString})`);\n    }\n\n    generate(xInput, yInput, width, height) {\n        return this.expressionFunc(xInput, yInput, width, height);\n    }\n}\n","\nconst EXPECTED_WIDTH = 1440;\n\nexport function adjustDimension(dimensionLength) {\n    const screenAdjustmentRatio = window.screen.width / EXPECTED_WIDTH;\n    return Math.round(dimensionLength * screenAdjustmentRatio);\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Common.css';\nimport './Title.css';\n\nexport default function Title() {\n    return (<h1 className=\"pixel-mist-title\"><Link to=\"/\">PIXEL MIST</Link></h1>);\n}","import React from 'react';\nimport './PixelCanvas.css'\nimport {BitMap} from 'glaciall-bitmap';\nimport {ExpressionPixelGenerator} from '../utils/PixelGenerator';\n\nconst DEFAULT_SCALE = 1000;\n\n\n/**\n * Taken from here: https://stackoverflow.com/a/8468879\n */\nfunction toHexValue(r, g, b) {\n    return (r << 16) | (g << 8) | b;\n}\n\nfunction updateCanvas(width, height, rGenerator, gGenerator, bGenerator) {\n    var bmp = new BitMap();\n    bmp.create(width, height, 0);\n\n    const rPixels = rGenerator.generatePixels(width, height, DEFAULT_SCALE).convertResultToRgbScale();\n    const gPixels = gGenerator.generatePixels(width, height, DEFAULT_SCALE).convertResultToRgbScale();\n    const bPixels = bGenerator.generatePixels(width, height, DEFAULT_SCALE).convertResultToRgbScale();\n\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height; y++) {\n            const r = rPixels[x][y];\n            const g = gPixels[x][y];\n            const b = bPixels[x][y];\n            bmp.setPixel(x, y, toHexValue(r, g, b));\n        }\n    }\n\n    return bmp.toBase64();\n}\n\nexport default function PixelCanvas({width, height, red, green, blue}) {\n    const rGenerator = new ExpressionPixelGenerator(red);\n    const gGenerator = new ExpressionPixelGenerator(green);\n    const bGenerator = new ExpressionPixelGenerator(blue);\n    console.log({width, height, rGenerator, gGenerator, bGenerator});\n    const imageBase64Str = updateCanvas(width, height, rGenerator, gGenerator, bGenerator);\n    return (<img width={`${width}px`} height={`${height}px`} src={imageBase64Str} className=\"main-canvas\"></img>);\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { useForm } from \"react-hook-form\";\nimport {\n    useHistory,\n    useLocation,\n    Link\n  } from \"react-router-dom\";\nimport {adjustDimension} from '../utils/ScreenUtils';\nimport './Common.css';\nimport './ExpressionBasedPixelGen.css'\nimport Title from './Title';\nimport PixelCanvas from './PixelCanvas';\n\nconst DEFAULT_SIDE_LENGTH = Math.min(1000, adjustDimension(1000));\n\nconst DEFAULT_QUERY_PARAMS = {\n    r: \"(Math.hypot(Math.abs(x), Math.abs(y)) + (Math.abs(x) & Math.abs(y))) / 2\",\n    g: \"Math.tanh(Math.abs(x) & Math.abs(y))\",\n    b: \"Math.abs(x) ^ Math.abs(y)\",\n    h: DEFAULT_SIDE_LENGTH,\n    w: DEFAULT_SIDE_LENGTH,\n};\n\nexport default function ExpressionBasedPixelGen() {\n    console.log(\"Called ExpressionBasedPixelGen\");\n    const history = useHistory();\n    const location = useLocation();\n    const { register, handleSubmit } = useForm();\n\n    const givenSearchParams = new URLSearchParams(location.search);\n    const givenSearchParamsObj = Object.fromEntries(givenSearchParams.entries());\n    const queryParamsAfterDefaults = _.mapValues(DEFAULT_QUERY_PARAMS, (value, key) => {\n        return givenSearchParams.get(key) || value;\n    });\n\n    let shouldUpdateQueryParams = !_.isEqual(queryParamsAfterDefaults, givenSearchParamsObj);\n    if (shouldUpdateQueryParams) {\n        history.push({\n            pathname: location.pathname,\n            search: new URLSearchParams(queryParamsAfterDefaults).toString()\n        });\n        return null;\n    }\n\n    const {r, g, b, w, h} = queryParamsAfterDefaults;\n\n    function onFormSubmit(formData) {\n        const newQueryParams = _.pick(formData, Object.keys(DEFAULT_QUERY_PARAMS));\n        history.push({\n            pathname: location.pathname,\n            search: new URLSearchParams(newQueryParams).toString()\n        });\n    }\n\n    return (\n        <div>\n            <Title />\n            <div className=\"container\">\n                <PixelCanvas width={Number(w)} height={Number(h)} red={r} green={g} blue={b}></PixelCanvas>\n                <form className=\"expression-form\" onSubmit={handleSubmit(onFormSubmit)}>\n                    <input type=\"number\" name=\"w\" min=\"1\" placeholder=\"Width in pixels\" defaultValue={Number(w)} ref={register({ required: true })} />\n                    <input type=\"number\" name=\"h\" min=\"1\" placeholder=\"Height in pixels\" defaultValue={Number(h)} ref={register({ required: true })} />\n                    <br />\n                    <input type=\"input\" name=\"r\" placeholder=\"Red Expression\" defaultValue={r} ref={register({ required: true })} className=\"red\" />\n                    <br />\n                    <input type=\"input\" name=\"g\" placeholder=\"Green Expression\" defaultValue={g} ref={register({ required: true })} className=\"green\" />\n                    <br />\n                    <input type=\"input\" name=\"b\" placeholder=\"Blue Expression\" defaultValue={b} ref={register({ required: true })} className=\"blue\" />\n                    <br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <div className=\"footer\">\n                    <Link to=\"/about\"><h2 className=\"footer-link\">About</h2></Link>\n                    <Link to=\"/examples\"><h2 className=\"footer-link\">Examples</h2></Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Title from './Title';\nimport {adjustDimension} from '../utils/ScreenUtils';\nimport './Common.css';\nimport './About.css';\n\nexport default function About() {\n    return (\n        <div>\n            <Title />\n            <div className=\"about-container\">\n                <h1>What is this?</h1>\n                <p>\n                    Pixel Mist is a tool that gives you a new way to visualize mathematical expressions. It's kind of like \n                    a pixel shader but a lot simpler and more approachable. You can use it to create custom gradients, \n                    generate interesting patterns, and get a better understanding of mathematics.\n                </p>\n                <h1>How does it work?</h1>\n                <p>\n                    I'm gonna assume you know about the <a href=\"https://en.wikipedia.org/wiki/RGB_color_model\">RGB color model</a>.\n                    <br/><br/>\n                    You are given five form fields to fill out:\n                    <ul>\n                        <li>Width</li>\n                        <li>Height</li>\n                        <li>Red Expression</li>\n                        <li>Green Expression</li>\n                        <li>Blue Expression</li>\n                    </ul>\n                    Width & height are used to specify dimensions of the generated image in number of pixels.\n                    <br/><br/>\n                    The RGB expressions are used to dictate what the color of each individual pixel should be at each XY coordinate in the image.\n                    This uses a cartesian coordinate system where the origin (0,0) is at the center of the image. Both the X & Y axis have an absolute maximum value of 1000.\n                    <br/><br/>\n                    You're really specifying <code>R(x, y), G(x, y), B(x, y)</code>. Those values are calculated for the entire dimensions of the image. \n                    <br/><br/>\n                    The min & max values generated by your expression are mapped to 0 and 255 respectively with every other value in between being \n                    linearly interpolated. The outputs for the individual R, G, & B channels are then coalesced to create the resulting image.\n                    <br/><br/>\n                    The expressions you write can do anything you can do in vanilla Javascript. That means you have full access to the <a href=\"https://www.w3schools.com/js/js_math.asp\">Math</a> object.\n                    Also, in addition to being able to use the dynamic variables x & y which represent a pixel's coordinate position, you can \n                    also reference static variables w & h which represent the width & height of the output image.\n                    <br/><br/>\n                    P.S. All the computation is happening in the browser on <i>your computer</i>. There's no backend for this website at all because I'm not paying for that 😛\n                </p>\n                <h1>Who made it?</h1>\n                <p><a href=\"https://github.com/sourabhdesai/\">I did</a></p>\n                <h1>Why does this exist?</h1>\n                <p>\n                    It was the summer after freshman year of my Computer Science undergrad and the\n                    world of programming was consuming me. I was playing around with a homework assignment I had gotten during\n                    the school year that involved editing images pixel-by-pixel. I decided to see what would happen if I\n                    generated an entire image from code by specifying mathematical equations for each RGB color channel.\n                    <br/><br/>\n                    I quickly realized that I could make images with fascinating patterns using this method. For example, I \n                    found that using the expression Math.tanh(x & y) would result in a <a href=\"https://en.wikipedia.org/wiki/Sierpi%C5%84ski_triangle\">Sierpiński triangle</a> \n                    pattern (<Link to={`/?r=Math.tanh%28x+%26+y%29&g=Math.tanh%28x+%26+y%29&b=Math.tanh%28x+%26+y%29&h=${adjustDimension(500)}&w=${adjustDimension(500)}`}>try for yourself</Link>). \n                    I could utilize my mathematical knowledge to adjust images to match my aesthetic preferences.\n                    <br/><br/>\n                    Besides being a way to keep my coding skills sharp over the summer, I found myself spending hours \n                    just creating new interesting patterns with this tool. I'm pretty certain I'm not the only one that would \n                    find this interesting to play with.\n                    <br/><br/>\n                    Fast forward 8 years and the world is undergoing a global pandemic which leaves me with a lot of free time \n                    being at home in quarantine. Enough free time to dust off the old side project from all those years ago and \n                    turn it into a website so everyone can be as captivated by it as I was.\n                </p>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport './Examples.css';\nimport Title from './Title';\nimport {adjustDimension} from \"../utils/ScreenUtils\";\nimport imageExamples from './imageExamples.json';\n\nfunction ImageExample({filename, r, g, b, w, h}) {\n    w = adjustDimension(w);\n    h = adjustDimension(h);\n    const queryParams = new URLSearchParams({r, g, b, w, h});\n    return (\n        <a href={`/?${queryParams.toString()}`}>\n            <img alt={filename} id={filename} className=\"example-img\" src={`/images/examples/${filename}`} />\n        </a>\n    );\n}\n\nexport default function Examples() {\n    return (\n        <div>\n            <Title />\n            <p>A few examples to get you started<br/>Click image to open in editor</p>\n            {imageExamples.map(ImageExample)}\n        </div>\n    );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport GitHubButton from 'react-github-btn'\nimport './App.css';\nimport ExpressionBasedPixelGen from './components/ExpressionBasedPixelGen';\nimport About from './components/About';\nimport Examples from './components/Examples';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <ExpressionBasedPixelGen />\n          </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/examples\">\n            <Examples />\n          </Route>\n        </Switch>\n        <div className=\"footer\">\n          <Link to=\"/about\"><h2 className=\"footer-link\">About</h2></Link>\n          <Link to=\"/examples\"><h2 className=\"footer-link\">Examples</h2></Link>\n          <div className=\"github-btn\">\n            <GitHubButton href=\"https://github.com/sourabhdesai/PixelMist\"\n              data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\n              data-icon=\"octicon-star\" aria-label=\"Star sourabhdesai/PixelMist on GitHub\">Star</GitHubButton>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}